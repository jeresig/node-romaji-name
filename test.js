var assert = require("assert");
var romajiName = require("./romaji-name");

romajiName.init(function() {
    var tests = [
        { original: 'FUKAZAWA Gunji',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Gunji',
          given_kana: 'ぐんじ',
          surname: 'Fukazawa',
          surname_kana: 'ふかざわ',
          name: 'Fukazawa Gunji',
          ascii: 'Fukazawa Gunji',
          plain: 'Fukazawa Gunji',
          kana: 'ふかざわぐんじ' },
        { original: 'Torii Kiyonaga',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Kiyonaga',
          given_kana: 'きよなが',
          surname: 'Torii',
          surname_kana: 'とりい',
          name: 'Torii Kiyonaga',
          ascii: 'Torii Kiyonaga',
          plain: 'Torii Kiyonaga',
          kana: 'とりいきよなが' },
        { original: 'Toyokuni UTAGAWA',
          locale: 'ja',
          options: { givenFirst: true },
          name_format: 'surname given generation',
          given: 'Toyokuni',
          given_kana: 'とよくに',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          name: 'Utagawa Toyokuni',
          ascii: 'Utagawa Toyokuni',
          plain: 'Utagawa Toyokuni',
          kana: 'うたがわとよくに' },
        { original: 'Toyokuni UTAGAWA',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Utagawa',
          given_kana: 'うたがわ',
          surname: 'Toyokuni',
          surname_kana: 'とよくに',
          name: 'Toyokuni Utagawa',
          ascii: 'Toyokuni Utagawa',
          plain: 'Toyokuni Utagawa',
          kana: 'とよくにうたがわ' },
        { original: 'Charles W Bartlett',
          locale: '',
          name_format: 'given surname generation',
          given: 'Charles',
          surname: 'Bartlett',
          name: 'Charles Bartlett',
          ascii: 'Charles Bartlett',
          plain: 'Charles Bartlett' },
        { original: 'Toyokuni IV',
          locale: 'ja',
          generation: 4,
          name_format: 'surname given generation',
          given: 'Toyokuni',
          given_kana: 'とよくに',
          name: 'Toyokuni IV',
          ascii: 'Toyokuni IV',
          plain: 'Toyokuni IV',
          kana: 'とよくに' },
        { original: 'Hiroshige Utagawa',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Hiroshige',
          given_kana: 'ひろしげ',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          name: 'Utagawa Hiroshige',
          ascii: 'Utagawa Hiroshige',
          plain: 'Utagawa Hiroshige',
          kana: 'うたがわひろしげ' },
        { original: 'Hiroshige Andō',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Hiroshige',
          given_kana: 'ひろしげ',
          surname: 'Andō',
          surname_kana: 'あんどう',
          name: 'Andō Hiroshige',
          ascii: 'Andoo Hiroshige',
          plain: 'Ando Hiroshige',
          kana: 'あんどうひろしげ' },
        { original: 'Kunitsuru Utagawa',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Kunitsuru',
          given_kana: 'くにつる',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          name: 'Utagawa Kunitsuru',
          ascii: 'Utagawa Kunitsuru',
          plain: 'Utagawa Kunitsuru',
          kana: 'うたがわくにつる' },
        { original: 'Toyoshige II, Utagawa',
          locale: 'ja',
          generation: 2,
          name_format: 'surname given generation',
          given: 'Toyoshige',
          given_kana: 'とよしげ',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          name: 'Utagawa Toyoshige II',
          ascii: 'Utagawa Toyoshige II',
          plain: 'Utagawa Toyoshige II',
          kana: 'うたがわとよしげ' },
        { original: 'Utagawa Kunitomi I (国富)',
          locale: 'ja',
          kanji: '国富',
          generation: 1,
          name_format: 'surname given generation',
          given: 'Kunitomi',
          given_kana: 'くにとみ',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          given_kanji: '国富',
          name: 'Utagawa Kunitomi',
          ascii: 'Utagawa Kunitomi',
          plain: 'Utagawa Kunitomi',
          kana: 'うたがわくにとみ' },
        { original: 'Kiyonobu II (清信　二代)',
          locale: 'ja',
          generation: 2,
          kanji: '清信',
          name_format: 'surname given generation',
          given: 'Kiyonobu',
          given_kana: 'きよのぶ',
          given_kanji: '清信',
          name: 'Kiyonobu II',
          ascii: 'Kiyonobu II',
          plain: 'Kiyonobu II',
          kana: 'きよのぶ' },
        { original: '清信　二代',
          locale: 'ja',
          generation: 2,
          kanji: '清信',
          given_kanji: '清信' },
        { original: 'Shun\'ei Katsukawa',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Shun\'ei',
          given_kana: 'しゅんえい',
          surname: 'Katsukawa',
          surname_kana: 'かつかわ',
          name: 'Katsukawa Shun\'ei',
          ascii: 'Katsukawa Shun\'ei',
          plain: 'Katsukawa Shun\'ei',
          kana: 'かつかわしゅんえい' },
        { original: 'Eishôsai Chōki',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Chōki',
          given_kana: 'ちょうき',
          surname: 'Eishōsai',
          surname_kana: 'えいしょうさい',
          name: 'Eishōsai Chōki',
          ascii: 'Eishoosai Chooki',
          plain: 'Eishosai Choki',
          kana: 'えいしょうさいちょうき' },
        { original: 'Choki Eishosai',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Chōki',
          given_kana: 'ちょうき',
          surname: 'Eishōsai',
          surname_kana: 'えいしょうさい',
          name: 'Eishōsai Chōki',
          ascii: 'Eishoosai Chooki',
          plain: 'Eishosai Choki',
          kana: 'えいしょうさいちょうき' },
        { original: 'Sharaku Toshusai',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Sharaku',
          given_kana: 'しゃらく',
          surname: 'Tōshūsai',
          surname_kana: 'とうしゅうさい',
          name: 'Tōshūsai Sharaku',
          ascii: 'Tooshuusai Sharaku',
          plain: 'Toshusai Sharaku',
          kana: 'とうしゅうさいしゃらく' },
        { original: 'Shunei Katsukawa',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Shun\'ei',
          given_kana: 'しゅんえい',
          surname: 'Katsukawa',
          surname_kana: 'かつかわ',
          name: 'Katsukawa Shun\'ei',
          ascii: 'Katsukawa Shun\'ei',
          plain: 'Katsukawa Shun\'ei',
          kana: 'かつかわしゅんえい' },
        { original: 'Charles Bartlett',
          locale: '',
          name_format: 'given surname generation',
          given: 'Charles',
          surname: 'Bartlett',
          name: 'Charles Bartlett',
          ascii: 'Charles Bartlett',
          plain: 'Charles Bartlett' },
        { original: 'Ma ZHONGJUN',
          locale: '',
          name_format: 'given surname generation',
          given: 'Ma',
          surname: 'Zhongjun',
          name: 'Ma Zhongjun',
          ascii: 'Ma Zhongjun',
          plain: 'Ma Zhongjun' },
        { original: 'Mai Li',
          locale: '',
          name_format: 'given surname generation',
          given: 'Mai',
          surname: 'Li',
          name: 'Mai Li',
          ascii: 'Mai Li',
          plain: 'Mai Li' },
        { original: 'Shokosai Hanbei (松好斎半兵衛)',
          locale: 'ja',
          kanji: '松好斎半兵衛',
          name_format: 'surname given generation',
          given: 'Hanbei',
          given_kana: 'はんべい',
          surname: 'Shōkosai',
          surname_kana: 'しょうこさい',
          given_kanji: '半兵衛',
          surname_kanji: '松好斎',
          name: 'Shōkosai Hanbei',
          ascii: 'Shookosai Hanbei',
          plain: 'Shokosai Hanbei',
          kana: 'しょうこさいはんべい' },
        { original: '(松好斎半兵衛)',
          locale: 'ja',
          kanji: '松好斎半兵衛',
          surname_kanji: '松好斎',
          given_kanji: '半兵衛' },
        { original: '歌川広重',
          locale: 'ja',
          kanji: '歌川広重',
          surname_kanji: '歌川',
          given_kanji: '広重' },
        { original: '歌川 国郷',
          locale: 'ja',
          kanji: '歌川国郷',
          surname_kanji: '歌川',
          given_kanji: '国郷' },
        { original: '柴田是眞',
          locale: 'ja',
          kanji: '柴田是眞',
          surname_kanji: '柴田',
          given_kanji: '是眞' },
        { original: '風折有丈',
          locale: 'ja',
          kanji: '風折有丈',
          surname_kanji: '風折',
          given_kanji: '有丈' }
    ];

    tests.forEach(function(expected) {
        var actual = romajiName.parseName(expected);
        try {
            assert.deepEqual(actual, expected);
        } catch(e) {
            console.log(actual);
            console.log(expected);
            throw e;
        }
    });

    (function() {
        var expected = { original: 'Toyokuni UTAGAWA',
          locale: 'ja',
          options: { givenFirst: false },
          name_format: 'surname given generation',
          given: 'Toyokuni',
          given_kana: 'とよくに',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          name: 'Utagawa Toyokuni',
          ascii: 'Utagawa Toyokuni',
          plain: 'Utagawa Toyokuni',
          kana: 'うたがわとよくに' };
        var actual = romajiName.parseName(expected, {
            givenFirst: true
        });
        expected.options.givenFirst = true;
        assert.deepEqual(actual, expected);
    })();

    (function() {
        var expected = { original: 'Toyoshige II (国重　二代)',
          locale: 'ja',
          name_format: 'surname given generation',
          given: 'Toyoshige',
          given_kana: 'とよしげ',
          surname: 'Utagawa',
          surname_kana: 'うたがわ',
          given_kanji: '国重',
          name: 'Utagawa Toyoshige II',
          ascii: 'Utagawa Toyoshige II',
          plain: 'Utagawa Toyoshige II',
          kana: 'うたがわとよしげ',
          generation: 2,
          kanji: '国重' };
        var actual = romajiName.mergeNames(
            romajiName.parseName("Utagawa Kunitomi I (国富)"),
            romajiName.parseName("Toyoshige II (国重　二代)")
        );
        assert.deepEqual(actual, expected);
    })();
});